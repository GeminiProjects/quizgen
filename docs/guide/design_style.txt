'use client';

import {
  Avatar,
  AvatarFallback,
  AvatarImage,
} from '@repo/ui/components/avatar';
import { Badge } from '@repo/ui/components/badge';
import { Button } from '@repo/ui/components/button';
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from '@repo/ui/components/card';
import { Progress } from '@repo/ui/components/progress';
import { Separator } from '@repo/ui/components/separator';
import {
  Tabs,
  TabsContent,
  TabsList,
  TabsTrigger,
} from '@repo/ui/components/tabs';
import {
  ArrowLeft,
  BarChart3,
  Check,
  Clock,
  MessageCircle,
  Pause,
  Play,
  Settings,
  Star,
  Target,
  TrendingUp,
  Users,
  X,
} from 'lucide-react';
import { useState } from 'react';

/**
 * 设计系统示例组件
 *
 * 本组件展示了 QuizGen 项目的现代化设计风格，基于 shadcn/ui 组件库构建。
 *
 * 设计原则：
 * 1. 现代化扁平设计：使用 gray-50 作为背景，营造清爽的视觉效果
 * 2. 卡片式布局：通过 Card 组件实现内容分组，提供清晰的信息层级
 * 3. 语义化色彩：使用有意义的颜色搭配表示不同状态和类型
 * 4. 一致性图标：统一使用 lucide-react 图标库，保持视觉一致性
 * 5. 响应式设计：使用 Grid 和 Flex 布局实现各种设备适配
 * 6. 交互反馈：通过进度条、徽章、按钮状态等提供即时反馈
 */
export default function DesignSystemExample() {
  const [activeTab, setActiveTab] = useState('overview');
  const [isActive, setIsActive] = useState(false);

  // 模拟数据
  const stats = {
    participants: 128,
    accuracy: 85,
    engagement: 92,
    questions: 12,
  };

  const activities = [
    {
      id: 1,
      type: 'quiz',
      title: '关于 React Hooks 的问题',
      status: 'completed',
      accuracy: 78,
      participants: 45,
      time: '2 分钟前',
    },
    {
      id: 2,
      type: 'discussion',
      title: '实时讨论：组件设计模式',
      status: 'active',
      participants: 23,
      time: '进行中',
    },
    {
      id: 3,
      type: 'poll',
      title: '投票：下节课内容偏好',
      status: 'pending',
      participants: 0,
      time: '计划中',
    },
  ];

  const userProfiles = [
    { id: 1, name: '张三', avatar: '', role: 'speaker', score: 98 },
    { id: 2, name: '李四', avatar: '', role: 'moderator', score: 95 },
    { id: 3, name: '王五', avatar: '', role: 'audience', score: 88 },
  ];

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="container mx-auto max-w-7xl px-4 py-6">
        {/* 页面头部 - 展示现代化的导航和状态指示 */}
        <div className="mb-6">
          <div className="mb-4 flex items-center gap-4">
            <Button size="sm" variant="ghost">
              <ArrowLeft className="mr-2 h-4 w-4" />
              返回
            </Button>
            <Badge className="bg-blue-100 text-blue-800">设计系统示例</Badge>
            <Badge variant="outline">演示模式</Badge>
          </div>

          <div className="flex items-center justify-between">
            <div>
              <h1 className="font-bold text-2xl text-gray-900">
                QuizGen 设计系统示例
              </h1>
              <p className="mt-1 text-gray-600">
                展示现代化的 shadcn/ui 设计模式和组件使用规范
              </p>
            </div>
            <div className="flex items-center gap-4">
              <div className="flex items-center gap-1 text-gray-600 text-sm">
                <Users className="h-4 w-4" />
                {stats.participants} 人在线
              </div>
              <Button size="sm" variant="outline">
                <Settings className="mr-2 h-4 w-4" />
                设置
              </Button>
            </div>
          </div>
        </div>

        {/* 主要内容区域 - 使用 Tabs 组件展示不同的设计模式 */}
        <Tabs onValueChange={setActiveTab} value={activeTab}>
          <TabsList className="grid w-full grid-cols-4">
            <TabsTrigger value="overview">总览</TabsTrigger>
            <TabsTrigger value="components">组件展示</TabsTrigger>
            <TabsTrigger value="layouts">布局模式</TabsTrigger>
            <TabsTrigger value="interactions">交互示例</TabsTrigger>
          </TabsList>

          {/* 总览标签页 - 展示统计卡片的设计模式 */}
          <TabsContent className="mt-6" value="overview">
            <div className="space-y-6">
              {/* 统计卡片网格 - 展示数据可视化的设计模式 */}
              <div className="grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-4">
                <Card>
                  <CardContent className="p-4">
                    <div className="flex items-center gap-3">
                      <div className="rounded-lg bg-blue-100 p-2">
                        <Users className="h-5 w-5 text-blue-600" />
                      </div>
                      <div>
                        <div className="font-bold text-2xl">
                          {stats.participants}
                        </div>
                        <div className="text-gray-600 text-sm">参与人数</div>
                      </div>
                    </div>
                  </CardContent>
                </Card>

                <Card>
                  <CardContent className="p-4">
                    <div className="flex items-center gap-3">
                      <div className="rounded-lg bg-green-100 p-2">
                        <Target className="h-5 w-5 text-green-600" />
                      </div>
                      <div>
                        <div className="font-bold text-2xl">
                          {stats.accuracy}%
                        </div>
                        <div className="text-gray-600 text-sm">准确率</div>
                      </div>
                    </div>
                  </CardContent>
                </Card>

                <Card>
                  <CardContent className="p-4">
                    <div className="flex items-center gap-3">
                      <div className="rounded-lg bg-purple-100 p-2">
                        <TrendingUp className="h-5 w-5 text-purple-600" />
                      </div>
                      <div>
                        <div className="font-bold text-2xl">
                          {stats.engagement}%
                        </div>
                        <div className="text-gray-600 text-sm">参与度</div>
                      </div>
                    </div>
                  </CardContent>
                </Card>

                <Card>
                  <CardContent className="p-4">
                    <div className="flex items-center gap-3">
                      <div className="rounded-lg bg-orange-100 p-2">
                        <MessageCircle className="h-5 w-5 text-orange-600" />
                      </div>
                      <div>
                        <div className="font-bold text-2xl">
                          {stats.questions}
                        </div>
                        <div className="text-gray-600 text-sm">题目数量</div>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </div>

              {/* 活动列表 - 展示列表项的设计模式 */}
              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <BarChart3 className="h-5 w-5" />
                    最近活动
                  </CardTitle>
                  <CardDescription>
                    展示不同类型活动的状态和统计信息
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    {activities.map((activity) => (
                      <div
                        className="flex items-center justify-between rounded-lg border p-4"
                        key={activity.id}
                      >
                        <div className="flex items-center gap-3">
                          <div
                            className={`rounded-lg p-2 ${
                              activity.type === 'quiz'
                                ? 'bg-blue-100'
                                : activity.type === 'discussion'
                                  ? 'bg-green-100'
                                  : 'bg-purple-100'
                            }`}
                          >
                            {activity.type === 'quiz' && (
                              <MessageCircle className="h-4 w-4 text-blue-600" />
                            )}
                            {activity.type === 'discussion' && (
                              <Users className="h-4 w-4 text-green-600" />
                            )}
                            {activity.type === 'poll' && (
                              <BarChart3 className="h-4 w-4 text-purple-600" />
                            )}
                          </div>
                          <div>
                            <h4 className="font-medium">{activity.title}</h4>
                            <div className="flex items-center gap-2 text-gray-600 text-sm">
                              <Clock className="h-3 w-3" />
                              {activity.time}
                            </div>
                          </div>
                        </div>
                        <div className="flex items-center gap-3">
                          <div className="text-right text-sm">
                            <div className="font-medium">
                              {activity.participants} 人参与
                            </div>
                            {activity.accuracy && (
                              <div className="text-gray-600">
                                准确率 {activity.accuracy}%
                              </div>
                            )}
                          </div>
                          <Badge
                            className={
                              activity.status === 'completed'
                                ? 'bg-green-100 text-green-800'
                                : activity.status === 'active'
                                  ? 'bg-blue-100 text-blue-800'
                                  : 'bg-gray-100 text-gray-800'
                            }
                          >
                            {activity.status === 'completed'
                              ? '已完成'
                              : activity.status === 'active'
                                ? '进行中'
                                : '待开始'}
                          </Badge>
                        </div>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            </div>
          </TabsContent>

          {/* 组件展示标签页 - 展示各种 UI 组件的使用方式 */}
          <TabsContent className="mt-6" value="components">
            <div className="grid grid-cols-1 gap-6 lg:grid-cols-2">
              {/* 按钮和徽章组件 */}
              <Card>
                <CardHeader>
                  <CardTitle>按钮和徽章</CardTitle>
                  <CardDescription>
                    不同状态和样式的按钮和徽章组件
                  </CardDescription>
                </CardHeader>
                <CardContent className="space-y-4">
                  <div className="flex flex-wrap gap-2">
                    <Button>主要按钮</Button>
                    <Button variant="outline">次要按钮</Button>
                    <Button variant="ghost">幽灵按钮</Button>
                    <Button variant="destructive">危险按钮</Button>
                  </div>
                  <Separator />
                  <div className="flex flex-wrap gap-2">
                    <Badge>默认</Badge>
                    <Badge variant="outline">轮廓</Badge>
                    <Badge variant="destructive">危险</Badge>
                    <Badge className="bg-green-100 text-green-800">成功</Badge>
                    <Badge className="bg-blue-100 text-blue-800">信息</Badge>
                  </div>
                </CardContent>
              </Card>

              {/* 头像和用户信息 */}
              <Card>
                <CardHeader>
                  <CardTitle>用户头像</CardTitle>
                  <CardDescription>用户头像和信息展示组件</CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    {userProfiles.map((user) => (
                      <div className="flex items-center gap-3" key={user.id}>
                        <Avatar className="h-10 w-10">
                          <AvatarImage alt={user.name} src={user.avatar} />
                          <AvatarFallback>{user.name.charAt(0)}</AvatarFallback>
                        </Avatar>
                        <div className="flex-1">
                          <div className="flex items-center gap-2">
                            <span className="font-medium">{user.name}</span>
                            <Badge className="text-xs" variant="outline">
                              {user.role === 'speaker'
                                ? '演讲者'
                                : user.role === 'moderator'
                                  ? '主持人'
                                  : '听众'}
                            </Badge>
                          </div>
                          <div className="flex items-center gap-1 text-gray-600 text-sm">
                            <Star className="h-3 w-3 fill-yellow-400 text-yellow-400" />
                            {user.score} 分
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>

              {/* 进度条和统计 */}
              <Card>
                <CardHeader>
                  <CardTitle>进度和统计</CardTitle>
                  <CardDescription>进度条和数据统计的展示方式</CardDescription>
                </CardHeader>
                <CardContent className="space-y-4">
                  <div className="space-y-2">
                    <div className="flex justify-between text-sm">
                      <span>总体进度</span>
                      <span>75%</span>
                    </div>
                    <Progress className="h-2" value={75} />
                  </div>
                  <div className="space-y-2">
                    <div className="flex justify-between text-sm">
                      <span>参与率</span>
                      <span>92%</span>
                    </div>
                    <Progress className="h-2" value={92} />
                  </div>
                  <div className="space-y-2">
                    <div className="flex justify-between text-sm">
                      <span>准确率</span>
                      <span>85%</span>
                    </div>
                    <Progress className="h-2" value={85} />
                  </div>
                </CardContent>
              </Card>

              {/* 状态指示器 */}
              <Card>
                <CardHeader>
                  <CardTitle>状态指示器</CardTitle>
                  <CardDescription>不同状态的视觉指示方式</CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="space-y-3">
                    <div className="flex items-center gap-2">
                      <div className="flex h-6 w-6 items-center justify-center rounded-full bg-green-100">
                        <Check className="h-4 w-4 text-green-600" />
                      </div>
                      <span className="text-sm">已完成</span>
                    </div>
                    <div className="flex items-center gap-2">
                      <div className="flex h-6 w-6 items-center justify-center rounded-full bg-blue-100">
                        <Clock className="h-4 w-4 text-blue-600" />
                      </div>
                      <span className="text-sm">进行中</span>
                    </div>
                    <div className="flex items-center gap-2">
                      <div className="flex h-6 w-6 items-center justify-center rounded-full bg-red-100">
                        <X className="h-4 w-4 text-red-600" />
                      </div>
                      <span className="text-sm">已失败</span>
                    </div>
                    <div className="flex items-center gap-2">
                      <div className="flex h-6 w-6 items-center justify-center rounded-full bg-gray-100">
                        <Pause className="h-4 w-4 text-gray-600" />
                      </div>
                      <span className="text-sm">暂停</span>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </div>
          </TabsContent>

          {/* 布局模式标签页 - 展示不同的布局设计模式 */}
          <TabsContent className="mt-6" value="layouts">
            <div className="space-y-6">
              {/* 网格布局示例 */}
              <Card>
                <CardHeader>
                  <CardTitle>响应式网格布局</CardTitle>
                  <CardDescription>
                    展示如何使用网格系统创建响应式布局
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-3">
                    {Array.from({ length: 6 }).map((_, i) => (
                      <div
                        className="rounded-lg border-2 border-gray-200 border-dashed p-4 text-center"
                        key={`grid-item-${i + 1}`}
                      >
                        <div className="text-gray-500">网格项 {i + 1}</div>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>

              {/* 卡片布局示例 */}
              <div className="grid grid-cols-1 gap-6 lg:grid-cols-2">
                <Card>
                  <CardHeader>
                    <CardTitle>左侧内容卡片</CardTitle>
                    <CardDescription>
                      这是一个标准的内容卡片布局
                    </CardDescription>
                  </CardHeader>
                  <CardContent>
                    <p className="text-gray-600 text-sm">
                      内容卡片是信息展示的基本单元，通过合理的内边距和边框样式，
                      为用户提供清晰的信息分组和视觉层次。
                    </p>
                  </CardContent>
                </Card>

                <Card>
                  <CardHeader>
                    <CardTitle>右侧内容卡片</CardTitle>
                    <CardDescription>展示两列布局的设计效果</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <p className="text-gray-600 text-sm">
                      双列布局能够有效利用屏幕空间，同时保持良好的可读性。
                      在移动设备上会自动调整为单列布局。
                    </p>
                  </CardContent>
                </Card>
              </div>
            </div>
          </TabsContent>

          {/* 交互示例标签页 - 展示各种交互组件 */}
          <TabsContent className="mt-6" value="interactions">
            <div className="space-y-6">
              {/* 控制面板 */}
              <Card>
                <CardHeader>
                  <CardTitle>交互控制面板</CardTitle>
                  <CardDescription>展示按钮状态变化和交互反馈</CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="flex gap-4">
                    <Button
                      className="flex-1"
                      onClick={() => setIsActive(!isActive)}
                      variant={isActive ? 'default' : 'outline'}
                    >
                      {isActive ? (
                        <>
                          <Pause className="mr-2 h-4 w-4" />
                          暂停
                        </>
                      ) : (
                        <>
                          <Play className="mr-2 h-4 w-4" />
                          开始
                        </>
                      )}
                    </Button>
                    <Button
                      disabled={!isActive}
                      onClick={() => setIsActive(false)}
                      variant="outline"
                    >
                      停止
                    </Button>
                  </div>
                  <div className="mt-4 rounded-lg bg-gray-50 p-4">
                    <div className="flex items-center gap-2">
                      <div
                        className={`h-3 w-3 rounded-full ${
                          isActive ? 'bg-green-500' : 'bg-gray-400'
                        }`}
                      />
                      <span className="text-sm">
                        状态: {isActive ? '运行中' : '已停止'}
                      </span>
                    </div>
                  </div>
                </CardContent>
              </Card>

              {/* 动态列表 */}
              <Card>
                <CardHeader>
                  <CardTitle>动态列表交互</CardTitle>
                  <CardDescription>
                    展示列表项的交互状态和动画效果
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="space-y-2">
                    {activities.slice(0, 3).map((activity) => (
                      <div
                        className="cursor-pointer rounded-lg border p-3 transition-colors hover:bg-gray-50"
                        key={activity.id}
                      >
                        <div className="flex items-center justify-between">
                          <div className="flex items-center gap-3">
                            <div className="h-2 w-2 rounded-full bg-blue-500" />
                            <span className="text-sm">{activity.title}</span>
                          </div>
                          <Badge className="text-xs" variant="outline">
                            {activity.status === 'completed'
                              ? '已完成'
                              : activity.status === 'active'
                                ? '进行中'
                                : '待开始'}
                          </Badge>
                        </div>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            </div>
          </TabsContent>
        </Tabs>
      </div>
    </div>
  );
}
